{"version":3,"file":"static/js/202.f1f3b39c.chunk.js","mappings":"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","sources":["components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","components/contactListItem/ContactListItem.styled.jsx","components/contactListItem/ContactListItem.jsx","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.jsx","redux/contacts/selectors.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  text-align: center;\n`;\n\nexport const Input = styled.input`\ndisplay: flex;\nbackground: #fff;\ncolor: #333;\npadding: 15px;\nwidth: 280px;\nborder: 1px solid #000; ы\nborder-radius: 0;\noutline: none; \n`;\nexport const Button = styled.button`\ndisplay: inline-block;\ncolor: #252537;\nwidth: 280px;\nheight: 50px;\npadding: 0 20px;\nbackground: #fff;\nborder: 1px solid #000; \noutline: none;\ncursor: pointer;\ntext-align: center;\ntransition: all 0.2s linear;\nmargin: 7% auto;\nletter-spacing: 0.05em;\n\n\n&:hover {\n  color: #fff; \n  background: #000; \n}\n`;","import React, { useState } from 'react';\nimport { Input, Form, Button } from 'components/contactForm/ContactForm.styled';\n\nexport function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let newcontact = {\n      name,\n      number,\n    };\n    onSubmit(newcontact);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <label htmlFor=\"inputName\">Name</label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id=\"inputName\"\n          value={name}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"inputNumber\">Number</label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id=\"inputNumber\"\n          value={number}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterArea = styled.input`\ndisplay: flex;\nbackground: #fff;\ncolor: #333;\npadding: 15px;\nwidth: 280px;\nborder: 1px solid #000; ы\nborder-radius: 0;\noutline: none; \n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterArea } from 'components/filter/Filter.styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <FilterArea type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\ntext-align: left;\nfont-style: italic;\ndisplay: flex;\ngap: 15px;\njustify-content: space-between;\nmargin-bottom: 5px;\n`;\n\nexport const DeleteButton = styled.button`\nbackground-color: transparent;\nborder-radius: 5px;\nborder: 0.5px solid;\npadding 5px;\ncursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { AiOutlinePhone } from 'react-icons/ai';\n\nimport {\n  ListItem,\n  DeleteButton,\n} from 'components/contactListItem/ContactListItem.styled';\n\nexport const ContactListItem = ({ name, number, onDeleteContact, id }) => (\n  <ListItem>\n    <div>\n      <AiOutlinePhone size={20} /> {name} : {number}\n    </div>\n    <DeleteButton onClick={() => onDeleteContact(id)}>\n      <RiDeleteBinLine size={20} />\n    </DeleteButton>\n  </ListItem>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ncolor: #000000\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ContactListItem } from 'components/contactListItem/ContactListItem';\nimport {List} from 'components/contactList/ContactList.styled'\n\nexport const ContactList = ({ filtredContacts, onDeleteContact }) => (\n  <List>\n    {filtredContacts.map(contact => (\n      <ContactListItem\n        key={contact.id}\n        id={contact.id}\n        name={contact.name}\n        number={contact.number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </List>\n);\n\nContactList.propTypes = {\n  filtredContacts: PropTypes.array.isRequired,\n};\n\n\n\n\n","export const selectСontacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import React, { useEffect } from 'react';\n\nimport { Header } from '../../components/App.styled';\nimport { ContactForm } from '../../components/contactForm/ContactForm';\nimport { Filter } from '../../components/filter/Filter';\nimport { ContactList } from '../../components/contactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport {\n  selectСontacts,\n  selectFilter,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/operations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectСontacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const onAddContact = newcontact => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newcontact.name.toLowerCase()\n      )\n    ) {\n      alert(`${newcontact.name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContact(newcontact));\n  };\n\n  const changeFilter = event => dispatch(setFilter(event.currentTarget.value));\n\n  const getFiltredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filtredContacts = getFiltredContacts();\n\n  return (\n    <>\n      <Header>Phonebook</Header>\n      <ContactForm onSubmit={onAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList\n        filtredContacts={filtredContacts}\n        onDeleteContact={onDeleteContact}\n      />\n    </>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","ContactForm","_ref","onSubmit","name","setName","useState","number","setNumber","handleChange","event","value","target","_jsx","_Fragment","children","_jsxs","preventDefault","htmlFor","type","pattern","title","required","id","onChange","FilterArea","Filter","ListItem","DeleteButton","ContactListItem","onDeleteContact","AiOutlinePhone","size","onClick","RiDeleteBinLine","List","ContactList","filtredContacts","map","contact","selectСontacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactsPage","dispatch","useDispatch","useSelector","useEffect","fetchContacts","getFiltredContacts","normalizedFilter","toLowerCase","includes","Header","newcontact","find","alert","concat","addContact","setFilter","currentTarget","contactId","deleteContact"],"sourceRoot":""}